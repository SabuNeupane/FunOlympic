{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\funOlympic\\\\client\\\\src\\\\components\\\\Sidebar\\\\SidebarMenu.jsx\",\n  _s = $RefreshSig$();\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useState, useEffect } from \"react\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menuAnimation = {\n  hidden: {\n    opacity: 0,\n    height: 0,\n    padding: 0,\n    transition: {\n      duration: 0.3,\n      when: \"afterChildren\"\n    }\n  },\n  show: {\n    opacity: 1,\n    height: \"auto\",\n    transition: {\n      duration: 0.3,\n      when: \"beforeChildren\"\n    }\n  }\n};\nconst menuItemAnimation = {\n  hidden: i => ({\n    padding: 0,\n    x: \"-100%\",\n    transition: {\n      duration: (i + 1) * 0.1\n    }\n  }),\n  show: i => ({\n    x: 0,\n    transition: {\n      duration: (i + 1) * 0.1\n    }\n  })\n};\nconst SidebarMenu = _ref => {\n  _s();\n  let {\n    route,\n    showAnimation,\n    isOpen,\n    setIsOpen\n  } = _ref;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n    setIsOpen(true);\n  };\n  useEffect(() => {\n    if (!isOpen) {\n      setIsMenuOpen(false);\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      onClick: toggleMenu,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu_item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: route.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: isOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: showAnimation,\n            initial: \"hidden\",\n            animate: \"show\",\n            exit: \"hidden\",\n            className: \"link_text\",\n            children: route.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n        animate: isMenuOpen ? {\n          rotate: -90\n        } : {\n          rotate: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(FaAngleDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: [isMenuOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: menuAnimation,\n        initial: \"hidden\",\n        animate: \"show\",\n        exit: \"hidden\",\n        className: \"menu_container\",\n        children: route.subRoutes.map((subRoute, i) => /*#__PURE__*/_jsxDEV(motion.div, {\n          variants: menuItemAnimation,\n          custom: i,\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: subRoute.path,\n            className: \"link\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon\",\n              children: subRoute.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"link_text\",\n              children: subRoute.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SidebarMenu, \"wSShVbDU3nvMgCOG3Tb8LxwMgA0=\");\n_c = SidebarMenu;\nexport default SidebarMenu;\nvar _c;\n$RefreshReg$(_c, \"SidebarMenu\");","map":{"version":3,"names":["AnimatePresence","motion","React","useState","useEffect","FaAngleDown","NavLink","jsxDEV","_jsxDEV","Fragment","_Fragment","menuAnimation","hidden","opacity","height","padding","transition","duration","when","show","menuItemAnimation","i","x","SidebarMenu","_ref","_s","route","showAnimation","isOpen","setIsOpen","isMenuOpen","setIsMenuOpen","toggleMenu","children","className","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","div","variants","initial","animate","exit","name","rotate","subRoutes","map","subRoute","custom","to","path","_c","$RefreshReg$"],"sources":["C:/Users/Rajeev/Desktop/funOlympic/client/src/components/Sidebar/SidebarMenu.jsx"],"sourcesContent":["import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst menuAnimation = {\r\n  hidden: {\r\n    opacity: 0,\r\n    height: 0,\r\n    padding: 0,\r\n    transition: { duration: 0.3, when: \"afterChildren\" },\r\n  },\r\n  show: {\r\n    opacity: 1,\r\n    height: \"auto\",\r\n    transition: {\r\n      duration: 0.3,\r\n      when: \"beforeChildren\",\r\n    },\r\n  },\r\n};\r\nconst menuItemAnimation = {\r\n  hidden: (i) => ({\r\n    padding: 0,\r\n    x: \"-100%\",\r\n    transition: {\r\n      duration: (i + 1) * 0.1,\r\n    },\r\n  }),\r\n  show: (i) => ({\r\n    x: 0,\r\n    transition: {\r\n      duration: (i + 1) * 0.1,\r\n    },\r\n  }),\r\n};\r\n\r\nconst SidebarMenu = ({ route, showAnimation, isOpen, setIsOpen }) => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      setIsMenuOpen(false);\r\n    }\r\n  }, [isOpen]);\r\n  return (\r\n    <>\r\n      <div className=\"menu\" onClick={toggleMenu}>\r\n        <div className=\"menu_item\">\r\n          <div className=\"icon\">{route.icon}</div>\r\n          <AnimatePresence>\r\n            {isOpen && (\r\n              <motion.div\r\n                variants={showAnimation}\r\n                initial=\"hidden\"\r\n                animate=\"show\"\r\n                exit=\"hidden\"\r\n                className=\"link_text\"\r\n              >\r\n                {route.name}\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n        {isOpen && (\r\n          <motion.div\r\n            animate={\r\n              isMenuOpen\r\n                ? {\r\n                    rotate: -90,\r\n                  }\r\n                : { rotate: 0 }\r\n            }\r\n          >\r\n            <FaAngleDown />\r\n          </motion.div>\r\n        )}\r\n      </div>{\" \"}\r\n      <AnimatePresence>\r\n        {isMenuOpen && (\r\n          <motion.div\r\n            variants={menuAnimation}\r\n            initial=\"hidden\"\r\n            animate=\"show\"\r\n            exit=\"hidden\"\r\n            className=\"menu_container\"\r\n          >\r\n            {route.subRoutes.map((subRoute, i) => (\r\n              <motion.div variants={menuItemAnimation} key={i} custom={i}>\r\n                <NavLink to={subRoute.path} className=\"link\">\r\n                  <div className=\"icon\">{subRoute.icon}</div>\r\n                  <motion.div className=\"link_text\">{subRoute.name}</motion.div>\r\n                </NavLink>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n        )}{\" \"}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarMenu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}